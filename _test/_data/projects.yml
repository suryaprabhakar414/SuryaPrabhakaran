- layout: top-middle
  name: Computer Pointer Controller
  #link: 
  github: /suryaprabhakar414/Computer-Pointer-Controller-OpenVINO.git
  #quote: >
    #Short overview of the project
  description: >
    * Developed the application using Intel Distribution of the OpenVINO Toolkit.
    
    * This app control the movement of mouse pointer by the direction of eyes and also estimated pose of the head.
    
    * This app takes video as input(video file or camera) and then estimates the gaze of the userâ€™s eyes and change the mouse pointer position accordingly.
- layout: top-middle
  name: Smart queuing System
  github: /suryaprabhakar414/Smart-Queuing-System-OpenVINO-Intel-DevCloud.git
  description: >
    * Developed the application using Intel Distribution of the OpenVINO Toolkit.
    
    * This app detects and counts the number of people in a particular queue and redirects them to a less congested queue.

    * Worked on Intel DevCloud to implement the project on several hardwares[CPU, IGPU, VPU(NCS2),FPGA].

- layout: top-middle
  name: People Counter App
  github: /suryaprabhakar414/People-Counter-App-OpenVINO.git
  description: >
    * Developed the application using Intel Distribution of the OpenVINO Toolkit.
    
    * This app calculates:-
      * the number of people in the frame
      * time spent by those people in the frame
      * the total number of people counted  <br />
      
    &nbsp;&nbsp;&nbsp;&nbsp; and sends this data to a MQTT server.
- layout: top-middle
  name: Non-Proliferative Diabetc Retinopathy Detection
  github: /suryaprabhakar414/Diabetic_Retinopathy.git
  description: >
   This project deals with detection of Non-Proliferative Diabetic Retinopathy and multiclass classification using deep learning frameworks. Implemented Inception Network(V1-V4,ResNetV1 and ResNetV2) to detect Non-Proliferative Diabetic Retinopathy.
- layout: top-middle
  name: Knee MRI Super-Resolution
  #github: /suryaprabhakar414/Diabetic_Retinopathy.git
  description: >
   Performed Super-Resolution on Knee MR Images using Deep Learning Networks(LapSRN, SRGAN, SRCNN). Achieved an SSIM of 0.9887 on the test set.

  
 
   
   
   
    
